JAVASCRIPT


String tem comportamento semelhante ao array
propriedade .lenght para visualizar o tamanho de caracteres contidos na string.
EX - 
const str = 'Olá Mundo';
console.log(str.length);

É possível acessar a posição de um caractere específico.
EX - console.log(str.[2]);

Retornando o útimo elemento de uma string.
console.log(str[str.length-1]); // quantidade -1


MÉTODOS:
indexOf() -- procura no texto o indice em que a palavra inicia. Se não encontrar o resultado esperado, retorna -1.
EX: console.log(str.indexOf('homem'));

charAt() -- Descobrir o CARACTERE que está em determinada posição.
EX: console.log(str.charAt('10')); 

charCodeAt() -- Descobrir o CODE que está em determinada posição.
EX: console.log(str.charCodeAt('10')); 

split() -- Recorta padrão contido nos parenteses () e remove da string, armazenando a nova string em um novo array. 
EX: console.log(str.split(" "));

concat() -- untar caracteres com os já existentes na string
EX: console.log(str.concat('. ','Sim',',' , ' ', 'exatamente'));

toUpperCase() -- transforma a cadeia de caracteres em letras MAIÚSCULAS
EX: console.log(str.toUpperCase())

toLowerCase() -- transforma a cadeia de caracteres em letras minúsculas
EX: console.log(str.toLoweCase())

replace() -- console.log(str.replace('palavra do texto','mnova palavra'))
EX: altera parte da string na primeira aparição
EX COM EXPRESSÃO REGULAR: console.log(str.replace(/homem/g,'pessoa'))

replaceAll() -- console.log(str.replaceAll('palavra do texto','nova palavra'))
EX: altera parte da string

startsWith() -- valor booleano para verificar se a string começa com o caractere (ou cadeia de caracteres) específicado(s) -- true ou false
EX: console.log(str.startsWith('O hom')); 

endsWith() -- valor booleano para verificar se a string termina com o caractere (ou cadeia de caracteres) específicado(s) -- true ou false
EX: console.log(str.endsWith('O hom')); 

slice() -- método para recortar parte da string
EX: console.log(str.slice(2,10)); 


slice() II -- método para recortar parte da string com números negativos
EX: console.log(str.slice(-3)); 






CSS





Linguagem de estilização



3 formas de apresentar o CSS


css inline - estilo para funcionalidade especifica em determinado elemento

<h1 style="color:red ; text-align: center; font-size: 30px;">Começando com CSS</h1>



css interno - estilo para funcionalidade especifica em determinada página

<HEAD>
<style>
        p{
            text-align: center;
            font-weight: bolder;
        }
    </style> <!-- CSS INTERNO -->
</HEAD>



css externo - estilo para funcionalidade generalista, sendo aplicado o mesmo estilo para diversas páginas
				link
<link rel="stylesheet" type="text/css" href="css/style.css">


ESTILOS:

- color: -- define a cor do texto
- background-color -- define a cor do plano de fundo
- font-size -- define o tamanho da fonte
- text-align -- permite definir em qual posição da tela irá ficar o elemento. EX: text-align:center

PRIORIDADE
INLINE > INTERNO > EXTERNO


Seletores
 
I) HTML

a) class = "nomeDaClasse" 
// é possivel colocar mais de uma classe para uma taG
// uma classe pode estar em várias tags



b) id = "NomeDoId"
// apenas um id por tag



c) <tag> </tag>



II) CSS 
a) .nomeDaClasse{

text-align:center;

}
b) #nomeDoId{

text-align:center;

}

c) tag {

}




PRIORIDADE
ID > CLASS > TAG


FONTES

font-family: arial

fontes baixadas
@font-face{
font-family:"minhafonte";
src:url(diretoriodoarquivo.formato)
}
links para baixar fontes: https://www.dafont.com/pt/


fontes externas
FONTE DO GOOGLE: https://fonts.google.com/
-Escolher fonte, copiar link do css externo e usar o nome do font-family:;
