# Bootcamp-Java-Full-Stack

---------------------------------------------------

## 22/05/10



### HTML


#### TAGS

- H1-H6   -- Hierarquia de títulos
- p	      -- parágrafo
- br	    -- quebra de linha
- em      -- dar ênfase ao texto selecionado
- strong  -- negrito semântico
- header  -- divisão inicial do html
- ol	    -- lista ordenada
- ul	    -- lista não ordenada
- dl 	    -- lista de definição
- img     -- inserção de imagem interna e externa e a importância do texto alternativo para a acessibilidade 
- div	    -- container genérico para conteúdo de fluxo
- Classes no HTML 

  
  
### JAVASCRIPT

  
#### COMANDOS  

- alert();    -- Mostra uma mensagem na tela
- prompt();   -- insere mensagem na tela e há um campo para resposta
- confirm();  -- mensagem com botão de confirmar e cancelar

  
#### VARIÁVEIS
  
- var nomeVar = valor;
      O var permite criar outra variavel com o mesmo nome. 
      
      É possivel alterar seu valor. 
      
      EX var nome = Lucas; 
      
      var nome = Lopes; 

- let nomeLet = valor; 
       O let não permite criar outra variavel com o mesmo nome. 
       
       É possivel alterar seu valor. 
       
       EX let nome = Lucas; 
       
       nome = Lopes;
- const nomeConst = valor; 
       O const não permite criar outra variavel com o mesmo nome. 
       
       Não é possível alterar seu valor. 
       
       EX const pi=3.1415; 

  
#### OPERADORES
  
i)
- ( + )   -- Sinal de mais
- ( - )   -- Sinal de menos
- (  )   --	Sinal de divisão
- (  )   -- Sinal de multiplicação
- (  )  -- Sinal de exponenciação
- ( % )   -- Sinal de resto da divisão

ii)
- ( == )  -- Sinal de valor igual
- ( === ) -- Sinal de valor e tipo igual
- ( != )  -- Sinal de valor diferente
- ( !== ) -- Sinal de valor e tipo diferente
- (  )   -- Sinal de maior que
- ( = )  -- Sinal de maior ou igual
- (  )   -- Sinal de menor que
- ( = )  -- Sinal de menor ou igual

iii)
- ( && )  -- Sinal lógico E
- (  )  -- Sinal lógico OU

  
#### ESTRUTURAS CONDICIONAIS 

- IF    	 -- Se
- IF ELSE  -- Se Senão 
  
  
---------------------------------------------------
 
  
## 22/05/11
  
 
  
### HTML
  
  
- continuação da aula de listas
- criação de tabelas
- criação de formulários
- exemplo de âncoras
- utilização de CSS para estilização da página {}; background-color; color; text-align;
- conceitos de classe e id


  
### JAVASCRIPT

  
#### CONTINUACAO OPERADORES 

- ( && ) e (  ) e ( ! )
- ( += )
- ( -= )
- ( = )
- ( = )

  
#### ESTRUTURA CONDICIONAL TERNÁRIA

- (expressão booleana (executa caso verdadeiro)  (executa caso falso) ) 

  
#### SWITCHh3

 pre     
  switch (expressão) {
      case valor 1
      comandos;
      break;
      case valor 2
      comandos;
      break;
      default
      comando padrão;
  }
pre
  
#### ESTRUTURAS DE REPETIÇÃO
  
- while
- do while
- for 
- foreach

  
#### EXTRA
  
- debugger
- concatenação
- Exercício criação de tabuada para reforço do conteúdo aprendido


---------------------------------------------------
  
  
## 22/05/12


  
### HTML

  
#### Formulários II
  
- action
- method POST e GET
- label
- input
- type ID e NAME
- select (option)
- textarea
- button


### JAVASCRIPT

#### Arrays unidimensionais e multidimensionaish3

##### Array unidimensional

- const array = new Array();
- const array2 = [1,2];
- const array3 = [1,2,3,4,5,6,7,8];


##### Array unidimensional

- EX array multidimensional	

pre
   const arrayTabela = [
      [1,2,3,4,5,6],
      [a,b,c,d,e],
      [A,B,C,D]
  ];
  console.table(arrayTabela);
  console.log(arrayTabela[1][3])
  console.log(arrayTabela[2][5])
pre

  pre
      ┌─────────┬─────┬─────┬─────┬─────┬─────┬───┐
      │ (index) │  0  │  1  │  2  │  3  │  4  │ 5 │
      ├─────────┼─────┼─────┼─────┼─────┼─────┼───┤
      │    0    │  1  │  2  │  3  │  4  │  5  │ 6 │
      │    1    │ 'a' │ 'b' │ 'c' │ 'd' │ 'e' │   │
      │    2    │ 'A' │ 'B' │ 'C' │ 'D' │     │   │
      └─────────┴─────┴─────┴─────┴─────┴─────┴───┘
  pre
  
    d
    
    undefined


- O primeiro [ ] é para buscar na linha do array, de cima pra baixo, igual na tabela  0 1 2 
- O segundo [ ] é para buscar na coluna do array, da esquerda para direita, igual na tabela 0 1 2 3 4 5
- Se o item que a gente quer estiver vazio, aparece undefined. E não é possível buscar valores fora do array, tipo arrayTabela[2][6], vai dar erro.

  


#### MAIS SOBRE ARRAYS

- método .length para saber o tamanho do array
- metodo variavel.toFixed(numero); 
      limita a quantidade de casas decimais que irão aparecer na tela 
      
      quando utilizado torna o numero em uma string
- metodo array.push 
      adiciona valores a ultima posição do array



#### FOR OF & FOR IN

EX 
pre
  let array = [2,3,4,5]
  for(let i of array){
      console.log(i)   
  }

  console.log(----------------)

  for(let j in array){
      console.log(j)   
  }
pre

- A posição de i no FOR OF é igual ao valor que tem dentro do array 
- A posição de j no FOR IN é igual a posição do array


#### EXERCÍCIO

- exercicio para reforço do conteudo de arrays


---------------------------------------------------
   
  
## Conteúdo aprendido em 22/05/13


  
### HTML

#### TAGS SEMÂNTICAS DO HTML5

- main
- section
- header
- nav
- article
- aside
- footer


### JAVASCRIPT 

#### STRING 

- let str = ''
- let str2 = 
- let str3 = ``


- ( n )				                       -- entende que é quebra de linha
- (  texto palavra texto  )      -- colocar aspas dentro de string 
- (  texto 'palavra' texto  )        -- colocar aspas dentro de aspas



#### MATH 

- Math.random() -- A função Math.random() retorna um número pseudo-aleatório no intervalo [0, 1[, ou seja, de 0 (inclusivo) até, mas não incluindo, 1 (exclusivo)
- Math.floor()  -- retorna o menor número inteiro dentre o número x
- Math.ceil()   -- retorna o menor número inteiro maior ou igual a x
- Math.round()  -- retorna o valor de um número arredondado para o inteiro mais proximo
- Math.sqrt()   -- retorna a raiz quadrada de um número ( x )
    
  